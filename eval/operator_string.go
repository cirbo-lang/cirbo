// Code generated by "stringer -type=operator"; DO NOT EDIT.

package eval

import "fmt"

const _operator_name = "opNoneopModuloopMultiplyopAddopSubtractopDivideopLessThanopEqualopGreaterThanopExponentopNotopNegateopConcatopAndopOropNotEqualopLessThanOrEqualopGreaterThanOrEqual"

var _operator_map = map[operator]string{
	0:    _operator_name[0:6],
	37:   _operator_name[6:14],
	42:   _operator_name[14:24],
	43:   _operator_name[24:29],
	45:   _operator_name[29:39],
	47:   _operator_name[39:47],
	60:   _operator_name[47:57],
	61:   _operator_name[57:64],
	62:   _operator_name[64:77],
	94:   _operator_name[77:87],
	172:  _operator_name[87:92],
	177:  _operator_name[92:100],
	8230: _operator_name[100:108],
	8743: _operator_name[108:113],
	8744: _operator_name[113:117],
	8800: _operator_name[117:127],
	8804: _operator_name[127:144],
	8805: _operator_name[144:164],
}

func (i operator) String() string {
	if str, ok := _operator_map[i]; ok {
		return str
	}
	return fmt.Sprintf("operator(%d)", i)
}
